syntax = "proto3";
package pkg.blob;

option go_package = "github.com/celestiaorg/go-square/blob";

// Blob (named after binary large object) is a chunk of data submitted by a user
// to be published to the Celestia blockchain. The data of a Blob is published
// to a namespace and is encoded into shares based on the format specified by
// share_version.
message Blob {
  bytes namespace_id = 1;
  bytes data = 2;
  uint32 share_version = 3;
  uint32 namespace_version = 4;
  // Signer is sdk.AccAddress that paid for this blob. This field is optional
  // and can only be used when share_version is set to 1. 
  bytes signer = 5;
}

// BlobTx wraps an encoded sdk.Tx with a second field to contain blobs of data.
// The raw bytes of the blobs are not signed over, instead we verify each blob
// using the relevant MsgPayForBlobs that is signed over in the encoded sdk.Tx.
message BlobTx {
  bytes tx = 1;
  repeated Blob blobs = 2;
  string type_id = 3;
}

// IndexWrapper adds index metadata to a transaction. This is used to track
// transactions that pay for blobs, and where the blobs start in the square.
message IndexWrapper {
  bytes           tx            = 1;
  repeated uint32 share_indexes = 2;
  string          type_id       = 3;
}